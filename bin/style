#!/usr/bin/env ruby

require 'fileutils'
require 'open3'

class Style
  class << self
    def call
      abort "#$0 must be run from root of Go project" unless File.exist?('Gopkg.toml') 

      run_full_lint(ARGV)
    end

    private

    Paths = Struct.new(:json, :annotations, :checkstyle, :junit)

    def run_full_lint(argv)
      puts "Running golangci-lint..."

      config = ENV.fetch('GOLANGCI_CONFIG', '.golangci.yml')

      paths = Paths.new(*ENV.values_at(
        'JSON_PATH', 'ANNOTATIONS_PATH', 'CHECKSTYLE_PATH', 'JUNIT_PATH'
      ))

      # no extra post-processing requested: don't write JSON or anything, just
      # run golangci-lint.
      unless paths.json || paths.annotations || paths.checkstyle || paths.junit
        exec('golangci-lint', 'run', '--config', config, *argv)
      end

      # ...extra stuff requested. run with json output.
      json, status = Open3.capture2(
        'golangci-lint', 'run', '--config', config, '--out-format=json', *argv,
      )

      if paths.json
        File.write(paths.json, json)
      end

      if paths.annotations
        loadscript('golangci2annotations')
        annot = GoLangCIToAnnotations.translate(json)
        File.write(paths.annotations, annot)
      end

      if paths.checkstyle || paths.junit
        loadscript('golangci2checkstyle')
        checkstyle = GoLangCIToCheckstyle.translate(json)

        if paths.checkstyle
          File.write(paths.checkstyle, checkstyle)
        end

        if paths.junit
          loadscript('checkstyle2junit')
          junit = CheckstyleToJUnit.translate(checkstyle)
          File.write(paths.junit, junit)
        end
      end

      exit(status.exitstatus)
    end

    def loadscript(script)
      load(File.expand_path("./#{script}", __dir__))
    end

    def spawnwait(*args, **kwargs)
      _, stat = Process.waitpid2(Process.spawn(*args, **kwargs))
      stat
    end

    def must_spawnwait(*args, **kwargs)
      stat = spawnwait(*args, **kwargs)
      abort("#{args.first} failed") unless stat.success?
      stat
    end
  end
end

__FILE__ == $PROGRAM_NAME and Style.call
